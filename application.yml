# Flag to check, that you have not fogot to create (rename) config
#
configured: true


# Options - different kind of constants, to keep root space clear
#
options:

  # # Cache location for differend needs (styles compiler, mincer, ...),
  # # anyone can create additional subfolders there.
  # # Path is relative to main app's root. By default - './.cache'
  # #
  # cache_dir: ./.cache

  # Layout header injection
  #inject_header: |
  #  <script>
  #    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  #    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  #    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  #    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  #    ga('create', 'UA-31060395-1', 'fontello.com');
  #    ga('send', 'pageview');

  #  </script>


# Locales
#
locales:

  # Application locale used by default (first enabled one if not set).
  #
  default: en-US

  # # List of enabled locales (all found locales by default).
  # enabled:
  #   - en-US
  #   - en-GB
  #   - ru-RU


# Security settings (currently - policy headers)
#
#security:
#  Content-Security-Policy: >
#    default-src *; style-src 'unsafe-inline' *;
#    script-src 'self' 'unsafe-inline' 'unsafe-eval' www.google-analytics.com platform.twitter.com;
#    connect-src 'self' www.google-analytics.com platform.twitter.com
#  X-Frame-Options: DENY


# Listening options
#
bind:
  default:
    listen: 0.0.0.0:3000

  # SYNOPSIS:
  #
  # <apiPath>:
  #   mount: [<proto>:][//[<host>][:<port>]][/<path>]
  #   listen: <address>[:<port = 80>]
  #   ssl:
  #     key:  /path/to/file.key   # Path might be absolute
  #     cert: /path/to/file.cert  # or relative to the main app
  #
  # SSL EXAMPLE:
  #
  # default:
  #   listen: 0.0.0.0:3000
  #   mount:  https://localhost:3000
  #   ssl:
  #     key:  ./etc/server.key
  #     cert: ./etc/server.cert
  #


  # ACTION, WHEN REQUESTED HOST IS UNKNOWN
  #
  # _ is a special keyword that hold function called when hostname is not
  # supposed to be served by server listener, by default 404 not found:
  #
  #_: !!js/function |
  #  function (req, res) {
  #    res.writeHead(404, { 'Content-Type': 'text/plain' });
  #    res.end('Invalid host ' + req.headers.host);
  #  }

